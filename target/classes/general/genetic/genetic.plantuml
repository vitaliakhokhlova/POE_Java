@startuml

title __GENETIC's Class Diagram__\n

  package com.formation.start {
    package com.formation.start.genetic {
      class AminoAcid {
          - symbol : Character
          - aaMap : HashMap<Character, String>
          + AminoAcid()
          + getName()
          + getSymbol()
          + toString()
      }
    }
  }
  

  package com.formation.start {
    package com.formation.start.genetic {
      class ImportFile {
          - nLines : int
          - nColumns : int
          - matrix : List<ArrayList<String>>
          + getData() : String[][]
          + ImportFile(String, String)
          + print()
          + getnLines() : int
          + getnColumns() : int
      }
    }
  }


  package com.formation.start {
    package com.formation.start.genetic {
      class NucleicAcid {
          - strand : ArrayList<Nucleobase>
          - ARN : boolean
          + NucleicAcid()
          + NucleicAcid(String, boolean)
          + getStrand() : ArrayList<Nucleobase>
          + setStrand(ArrayList<Nucleobase>)
          + getComplementary() : NucleicAcid
          + toString() : String
      }
    }
  }


  package com.formation.start {
    package com.formation.start.genetic {
      class Nucleobase {
          - symbol : Character
          - symbolList : ArrayList<Character>
          - nameList : ArrayList<String>
          + Nucleobase()
          + Nucleobase(String)
          + toString() : String
          + getSymbol() : Character
          + setSymbol(Character)
          + getName() : String
          + getFamily() : String
          + getComplementary() : Nucleobase
      }
    }
  }


  package com.formation.start {
    package com.formation.start.genetic {
      class Polypeptide {
          - chain : ArrayList<AminoAcid>
          + getPolypeptide() : ArrayList<AminoAcid>
          + addPolypeptide(AminoAcid)
          + toString() : String
      }
    }
  }


  package com.formation.start {
    package com.formation.start.genetic {
      class Ribosome {
          {static} + codonMap : HashMap<String, Character>
          {static} - translate(NucleicAcid) : ArrayList<AminoAcid>
          {static} - codonList(NucleicAcid) : ArrayList<String>
          {static} + factory(NucleicAcid) : ArrayList<Polypeptide>
      }
    }
  }


  Nucleobase --> "1" Nucleobase : getComplementary
  NucleicAcid --> "1" NucleicAcid : getComplementary
  NucleicAcid o--> "*" Nucleobase : strand


  Polypeptide o--> "*" AminoAcid : chain
  Ribosome --> "1" NucleicAcid
  Ribosome --> "*" Polypeptide : factory



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
